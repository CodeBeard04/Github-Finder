{"version":3,"sources":["components/GithubCard.tsx","pages/HomePage.tsx","pages/DetailsPage.tsx","pages/NotFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GithubCard","props","classes","useStyles","history","useHistory","Card","className","root","CardActionArea","onClick","push","cardData","login","CardMedia","media","image","avatar_url","title","CardContent","Typography","gutterBottom","variant","component","color","public_repos","followers","following","CardActions","Button","size","href","html_url","makeStyles","minWidth","bullet","display","margin","transform","fontSize","pos","marginBottom","height","HomePage","useState","userName","setUserName","currentGithubData","setCurrentGithubData","setIsDetailsPage","useEffect","storageObject","localStorage","getItem","JSON","parse","length","console","log","setItem","stringify","handleisDetailsStateChange","TextField","label","onChange","e","target","value","handleUserNameChange","fetch","then","res","ok","window","alert","json","data","map","index","style","goToDetailPage","toString","DetailsPage","id","useParams","detailData","setDetailData","NotFound","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d59f5e8c.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardActionArea, CardMedia, CardActions, CardContent, Button, Typography, Link } from \"@material-ui/core\";\nimport GithubData from \"../models/githubData\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface CardProps {\n  cardData: GithubData;\n  goToDetailPage: () => void;\n}\n\nexport default function GithubCard(props: CardProps) {\n  const classes = useStyles();\n  const history = useHistory();\n  const preventDefault = (event: React.SyntheticEvent) => event.preventDefault();\n\n  const redirectToDetailPage = () => {\n    history.push(`/details/${props.cardData.login}`);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea onClick={redirectToDetailPage}>\n        <CardMedia className={classes.media} image={props.cardData.avatar_url} title={props.cardData.login} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.cardData.login}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {\"Repos : \" + props.cardData.public_repos}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {\"Followers : \" + props.cardData.followers}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {\"Following : \" + props.cardData.following}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        {/* <Link  onClick={preventDefault}> */}\n        <Button size=\"small\" color=\"primary\">\n          <a href={props.cardData.html_url}>Visit Profile</a>\n        </Button>\n        {/* </Link> */}\n      </CardActions>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 100,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  media: {\n    height: 140,\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport GithubCard from \"../components/GithubCard\";\nimport GithubData from \"../models/githubData\";\nimport DetailsPage from \"./DetailsPage\";\n\nfunction HomePage(props: any) {\n  const [userName, setUserName] = useState(\"\");\n  const [currentGithubData, setCurrentGithubData] = useState<GithubData[]>([]);\n  const [isDetailsPage, setIsDetailsPage] = useState(false);\n\n  //this useEffect is run only on component render, setting local state from browser Storage for persistency\n  useEffect(() => {\n    let storageObject = localStorage.getItem(\"githubUserData\");\n    if (storageObject) {\n      let parsedStorageObject = JSON.parse(storageObject) as GithubData[];\n      if (parsedStorageObject.length > currentGithubData.length) {\n        //console.log(\"got item from storage and setting react state\");\n        setCurrentGithubData(JSON.parse(storageObject));\n      }\n    }\n    console.log(currentGithubData);\n  }, []);\n\n  //this useeffect is run every time State changes and it updates the local storage\n  useEffect(() => {\n    localStorage.setItem(\"githubUserData\", JSON.stringify(currentGithubData));\n  }, [currentGithubData]);\n\n  const handleUserNameChange = (e: any) => {\n    console.log(\"Setting UserName\");\n    console.log(e.target.value);\n    setUserName(e.target.value);\n  };\n\n  const handleisDetailsStateChange = () => {\n    setIsDetailsPage(true);\n    console.log(\"mah state is changed boi\");\n  };\n\n  const getApiData = () => {\n    fetch(`https://api.github.com/users/${userName}`)\n      .then((res) => {\n        if (res.ok) {\n          console.log(\"Response Fetched\");\n        } else {\n          //Showing Popup for Bad Response\n          window.alert(\"User Not Found\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data);\n\n        //takes existing array of currentGithubData and appends data to it\n        setCurrentGithubData((currentGithubData) => [...currentGithubData, data]);\n      });\n  };\n\n  return (\n    <div>\n      <TextField label=\"UserName\" variant=\"outlined\" onChange={(e) => handleUserNameChange(e)}></TextField>\n      <Button variant=\"contained\" color=\"primary\" onClick={getApiData}>\n        Add\n      </Button>\n      {currentGithubData ? (\n        currentGithubData.map((data, index) => (\n          <div className=\"container\">\n            <div className=\"row\" style={{\"margin\": \"10px\", \"padding\": \"10px\"}}>\n              <div className=\"col-6\">\n                <GithubCard key={index.toString()} cardData={data} goToDetailPage={handleisDetailsStateChange} />\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <div>Please Search Something</div>\n      )}\n    </div>\n  );\n}\n\nexport default HomePage;\n","import { Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport GithubData from \"../models/githubData\";\n\ninterface DetailProps {\n  cardData?: GithubData;\n}\n\nexport default function DetailsPage(props: DetailProps) {\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const [detailData, setDetailData] = useState<GithubData>();\n\n  useEffect(() => {\n    fetch(`https://api.github.com/users/${id}`)\n      .then((res) => {\n        if (res.ok) {\n          console.log(\"Detail Response Fetched\");\n        } else {\n          console.log(\"Invalid UserId\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setDetailData(data);\n      });\n  }, []);\n\n  const redirectToHome = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <Button onClick={redirectToHome} variant=\"outlined\" color=\"primary\">\n        Back to Home\n      </Button>\n      Hello I Am Details Page for {id}\n      <div>user Details Are {JSON.stringify(detailData)}</div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <h2>Sorry</h2>\n      <p>That page cannot be found</p>\n      <Link to=\"/\">Back to the homepage...</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport DetailsPage from \"./pages/DetailsPage\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/details/:id\">\n            <DetailsPage />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}